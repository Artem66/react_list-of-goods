{"version":3,"sources":["App.tsx","components/GoodsList/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","state","sortType","NONE","isReversed","reverse","setState","sortByAlphabrtical","ALPABET","sortByLength","LENGTH","resetByClick","this","isDisplay","allGoods","visibleGoods","sort","goodOne","goodTwo","localeCompare","length","getReorderedGoods","className","type","classNames","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGCbQC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KACL,SAACC,GAAD,OACE,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SDLrBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAwCE,IAAMM,EAAb,4MACEC,MAAyB,CACvBC,SAAUR,EAASS,KACnBC,YAAY,GAHhB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBARzB,EAYEG,mBAAqB,WACnB,EAAKD,SAAS,CACZJ,SAAUR,EAASc,WAdzB,EAkBEC,aAAe,WACb,EAAKH,SAAS,CACZJ,SAAUR,EAASgB,UApBzB,EAwBEC,aAAe,WACb,EAAKL,SAAS,CACZJ,SAAUR,EAASS,KACnBC,YAAY,KA3BlB,4CA+BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WACZS,EAAYT,GAAcF,IAAaR,EAASS,KAEhDW,EAhEH,SACLlB,EADK,GAGJ,IADCM,EACF,EADEA,SAAUE,EACZ,EADYA,WAENW,EAAY,YAAOnB,GAiBzB,OAfAmB,EAAaC,MAAK,SAACC,EAASC,GAC1B,OAAQhB,GACN,KAAKR,EAASc,QACZ,OAAOS,EAAQE,cAAcD,GAC/B,KAAKxB,EAASgB,OACZ,OAAOO,EAAQG,OAASF,EAAQE,OAClC,QACE,OAAO,MAIThB,GACFW,EAAaV,UAGRU,EA2CYM,CACftB,EAAiB,CAAEG,WAAUE,eAG/B,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYtB,IAAaR,EAASc,UAGtCiB,QAASb,KAAKL,mBARhB,iCAaA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYtB,IAAaR,EAASgB,SAGtCe,QAASb,KAAKH,aARhB,4BAaA,wBACEc,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAapB,IAGjBqB,QAASb,KAAKP,QARhB,qBAaCQ,EAEG,wBACEU,KAAK,SACLD,UAAU,4BACVG,QAASb,KAAKD,aAHhB,mBAQA,QAEN,6BACE,cAAC,EAAD,CAAWf,MACTkB,aA/FZ,GAAyBY,IAAMC,WExD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.da456e85.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodOne, goodTwo) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return goodOne.localeCompare(goodTwo);\n      case SortType.LENGTH:\n        return goodOne.length - goodTwo.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabrtical = () => {\n    this.setState({\n      sortType: SortType.ALPABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  resetByClick = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const isDisplay = isReversed || sortType !== SortType.NONE;\n\n    const allGoods = getReorderedGoods(\n      goodsFromServer, { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPABET,\n              },\n            )}\n            onClick={this.sortByAlphabrtical}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {isDisplay\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.resetByClick}\n              >\n                Reset\n              </button>\n            )\n            : null}\n        </div>\n        <ul>\n          <GoodsList goods={\n            allGoods\n          }\n          />\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(\n        (good) => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ),\n      )}\n    </ul>\n  );\n};\n\nexport default React.memo(GoodsList);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}